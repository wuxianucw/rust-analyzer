name: release
on:
  schedule:
  - cron: '0 0 * * *' # midnight UTC

  push:
    branches:
    - release
    - trigger-nightly
    
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings -W unreachable-pub"
  RUSTUP_MAX_RETRIES: 10
  FETCH_DEPTH: 0 # pull in the tags for the version string

jobs:
  dist-i686-pc-windows-msvc:
    name: dist (i686-pc-windows-msvc)
    runs-on: windows-latest
    env:
      RA_TARGET: i686-pc-windows-msvc

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: ${{ env.FETCH_DEPTH }}

    # We need to disable the existing toolchain to avoid updating rust-docs
    # which takes a long time. The fastest way to do this is to rename the
    # existing folder, as deleting it takes about as much time as not doing
    # anything and just updating rust-docs.
    - name: Rename existing rust toolchain
      run: Rename-Item C:\Users\runneradmin\.rustup\toolchains\stable-x86_64-pc-windows-msvc C:\Users\runneradmin\.rustup\toolchains\stable-x86_64-pc-windows-msvc.old

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: i686-pc-windows-msvc
        profile: minimal
        override: true

    - name: Dist
      run: cargo xtask dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-i686-pc-windows-msvc
        path: ./dist

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: ['dist-i686-pc-windows-msvc']
    steps:
    - name: Install Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - run: echo "TAG=$(date --iso -u)" >> $GITHUB_ENV
      if: github.ref == 'refs/heads/release'
    - run: echo "TAG=nightly" >> $GITHUB_ENV
      if: github.ref != 'refs/heads/release'
    - run: 'echo "TAG: $TAG"'

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: ${{ env.FETCH_DEPTH }}

    - run: echo "HEAD_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
    - run: 'echo "HEAD_SHA: $HEAD_SHA"'

    - uses: actions/download-artifact@v1
      with:
        name: dist-i686-pc-windows-msvc
        path: dist
    - run: ls -al ./dist

    - name: Publish Release
      uses: ./.github/actions/github-release
      with:
        files: "dist/*"
        name: ${{ env.TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}

#    - run: npm ci
#      working-directory: ./editors/code

#    - name: Publish Extension
#      if: github.ref == 'refs/heads/release'
#      working-directory: ./editors/code
#      # token from https://dev.azure.com/rust-analyzer/
#      run: npx vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --packagePath ../../dist/rust-analyzer.vsix
